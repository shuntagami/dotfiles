{
  "editor.tabSize": 2,
  "editor.guides.bracketPairs": "true",
  "editor.cursorStyle": "block",
  "editor.fontFamily": "SourceHanCodeJP-Regular, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontSize": 15,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.find.globalFindClipboard": true,
  "editor.formatOnSaveTimeout": 2000,
  "editor.formatOnSave": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": true
  },
  "editor.suggestSelection": "first",
  "editor.formatOnPaste": true,
  "editor.formatOnType": true,
  "editor.minimap.enabled": false,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.editor.wrapTabs": true,
  "workbench.sideBar.location": "left",
  "workbench.colorTheme": "Horizon",
  "workbench.colorCustomizations": {
    "statusBar.background": "#8ac6f2",
    "statusBar.noFolderBackground": "#8ac6f2",
    "statusBar.debuggingBackground": "#8ac6f2",
    "statusBar.foreground": "#444444",
    "statusBar.debuggingForeground": "#444444"
  },
  "window.clickThroughInactive": false,
  "window.title": "${activeEditorMedium}${separator}${rootName}",
  "files.autoSave": "onFocusChange",
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "breadcrumbs.enabled": true,
  "vim.statusBarColorControl": true,
  "vim.statusBarColors.normal": ["#8ac6f2", "#444444"],
  "vim.statusBarColors.insert": ["#95e454", "#444444"],
  "vim.statusBarColors.visual": ["#f2c68a", "#444444"],
  "vim.statusBarColors.visualline": ["#f2c68a", "#444444"],
  "vim.statusBarColors.visualblock": ["#f2c68a", "#444444"],
  "vim.statusBarColors.replace": ["#e5786d", "#444444"],
  "vim.useSystemClipboard": true,
  "vim.mouseSelectionGoesIntoVisualMode": false,
  "C_Cpp.clang_format_style": "Google",
  "[c]": {
    "editor.defaultFormatter": "xaver.clang-format"
  },
  "[markdown]": {
    "editor.quickSuggestions": {
      "comments": "on",
      "strings": "on",
      "other": "on"
    }
  },
  "yaml.customTags": [
    "!Base64 scalar",
    "!Cidr scalar",
    "!And sequence",
    "!Equals sequence",
    "!If sequence",
    "!Not sequence",
    "!Or sequence",
    "!Condition scalar",
    "!FindInMap sequence",
    "!GetAtt scalar",
    "!GetAtt sequence",
    "!GetAZs scalar",
    "!ImportValue scalar",
    "!Join sequence",
    "!Select sequence",
    "!Split sequence",
    "!Sub scalar",
    "!Transform mapping",
    "!Ref scalar"
  ],
  "ruby.format": "rubocop",
  "ruby.useLanguageServer": true,
  "ruby.intellisense": "rubyLocate",
  "ruby.lint": {
    "rubocop": true,
    "rails": true
  },
  "ruby.rubocop.useBundler": true,
  "ruby.useBundler": true,
  "ruby.pathToBundler": "$HOME/dotfiles/pkg/.anyenv/envs/rbenv/shims/",
  "ruby.rubocop.executePath": "$HOME/dotfiles/pkg/.anyenv/envs/rbenv/shims/",
  "ruby.rubocop.onSave": true,
  "ruby.codeCompletion": "rcodetools",
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },
  "go.toolsManagement.autoUpdate": true,
  "go.toolsEnvVars": {
    "GOFLAGS": "-tags=test"
  },
  "go.lintTool": "golangci-lint",
  "go.lintFlags": ["--fast"],
  "[javascript]": {
    // 自動修正
    "editor.defaultFormatter": "dbaeumer.vscode-eslint"
  },
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "tslint.autoFixOnSave": true,
  "tslint.packageManager": "yarn",
  "tslint.run": "onType",
  "protoc": {
    "path": "/opt/homebrew/bin/protoc",
    "options": ["--proto_path=proto"]
  },
  "explorer.autoReveal": false,
  "launch": {
    "version": "0.2.0",
    "configurations": [
      {
        "name": "Debug Jest Tests",
        "type": "node",
        "request": "launch",
        "runtimeArgs": [
          "--inspect-brk",
          "${workspaceRoot}/node_modules/.bin/jest",
          "--runInBand"
        ],
        "console": "integratedTerminal",
        "internalConsoleOptions": "neverOpen",
        "port": 9229
      }
    ]
  },
  "redhat.telemetry.enabled": true,
  "todo-tree.general.tags": [
    "BUG",
    "HACK",
    "FIXME",
    "TODO",
    "XXX",
    "[ ]",
    "[x]"
  ],
  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
  "prettier.singleQuote": true
}
