#!/usr/bin/env ruby

# frozen_string_literal: true

require 'json'
require 'net/http'
require 'uri'

HELP = <<~TEXT
  Usage: ./cur FROM [TO] AMOUNT
         (TO を省略すると JPY が既定)

  Example:
      ./cur USD 100         # USD → JPY
      ./cur EUR GBP 250     # EUR → GBP
      ./cur AUD USD 300
TEXT

#------------------------------------------------------------
# 引数パース
#------------------------------------------------------------
args = ARGV
if args.empty? || %w[-h --help].include?(args[0])
  warn HELP
  exit 1
end

case args.size
when 3
  from, to, amount = args
when 2
  from, amount = args
  to = 'JPY'
else
  warn HELP
  exit 1
end

amount = Float(amount) rescue (warn 'AMOUNT には数値を指定してください'; exit 1)

from = from.upcase
to   = to.upcase

#------------------------------------------------------------
# 3 桁区切りフォーマッタ
#   1234.5  -> "1,234.5"
#   1000    -> "1,000"
#------------------------------------------------------------
def format_number(n)
  s = format('%.2f', n).sub(/\.00$/, '')        # 小数 0.00 は削除
  s.reverse.gsub(/(\d{3})(?=\d)/, '\\1,').reverse
end

#------------------------------------------------------------
# 為替レート取得
#------------------------------------------------------------
def fetch_rate(base, target)
  uri = URI("https://api.exchangerate-api.com/v4/latest/#{base}")
  res = Net::HTTP.get_response(uri)

  unless res.is_a?(Net::HTTPSuccess)
    warn '為替レートの取得に失敗しました'
    exit 1
  end

  rate = JSON.parse(res.body)['rates'][target]
  unless rate
    warn "Currency code '#{target}' not found."
    exit 1
  end
  rate
end

#------------------------------------------------------------
# 変換実行
#------------------------------------------------------------
rate   = fetch_rate(from, to)
result = (amount * rate).round(2)

puts "#{format_number(amount)} #{from} is approximately " \
     "#{format_number(result)} #{to}."

